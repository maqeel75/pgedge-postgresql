name: Build PGEdge PostgreSQL Packages

on:
  workflow_dispatch:
    inputs:
      pg_version:
        description: 'PostgreSQL version to build (e.g., 17.5)'
        required: true
        default: '17.5'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: rockylinux:8
            arch: amd64
          #- image: rockylinux:8
          #  arch: arm64
          - image: rockylinux:9
            arch: amd64
          #- image: rockylinux:9
          #  arch: arm64
          #- image: rockylinux/rockylinux:10
          #  arch: amd64
          #- image: rockylinux/rockylinux:10
          #  arch: arm64
          - image: debian:bullseye
            arch: amd64
          #- image: debian:bullseye
          #  arch: arm64
          - image: debian:bookworm
            arch: amd64
          #- image: debian:bookworm
          #  arch: arm64
          - image: ubuntu:jammy
            arch: amd64
          #- image: ubuntu:jammy
          #  arch: arm64
          - image: ubuntu:noble
            arch: amd64
          #- image: ubuntu:noble
          #  arch: arm64

    name: Build on ${{ matrix.image }} (${{ matrix.arch }})
    steps:
      - name: Checkout pgedge-postgresql source
        uses: actions/checkout@v4

      - name: Checkout private builder action (pgedge-builder-action)
        uses: actions/checkout@v4
        with:
          repository: maqeel75/pgedge-builder-action
          token: ${{ secrets.GH_WORKFLOW_SECRET }}
          path: .github/actions/pgedge-builder-action


      - name: Run PGEdge Builder Action
        uses: ./.github/actions/pgedge-builder-action
        with:
          image: ${{ matrix.image }}
          arch: ${{ matrix.arch }}
          pg_version: ${{ inputs.pg_version }}

      - name: Upload built packages
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.arch }}
          path: ./output-${{ matrix.arch }}


  upload:
    name: Upload to Cloudsmith
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all output artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./output

      - name: Checkout uploader action
        uses: actions/checkout@v4
        with:
          repository: maqeel75/cloudsmith-uploader-action
          token: ${{ secrets.GH_WORKFLOW_SECRET }}
          path: .github/actions/cloudsmith-uploader-action

      - name: Upload packages to Cloudsmith
        uses: ./.github/actions/cloudsmith-uploader-action
        with:
          directory: ./output
          api_key: ${{ secrets.CLOUDSMITH_API_KEY }}
          owner: maqeel
          repo: pgedge
          exclude: ""
